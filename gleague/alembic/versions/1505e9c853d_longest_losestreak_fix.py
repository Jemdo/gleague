"""longest_losestreak fix

Revision ID: 1505e9c853d
Revises: 311d1f1983e
Create Date: 2015-03-09 05:13:54.247594

"""

# revision identifiers, used by Alembic.
revision = '1505e9c853d'
down_revision = '311d1f1983e'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


connection = op.get_bind()

season_stats_tbl = sa.Table(
    'season_stats',
    sa.MetaData(),
    sa.Column('id', sa.Integer, primary_key=True),
    sa.Column('longest_winstreak', sa.Integer),
    sa.Column('longest_losestreak', sa.Integer),
    sa.Column('streak', sa.Integer)
)

player_match_stats_tbl = sa.Table(
    'player_match_stats',
    sa.MetaData(),
    sa.Column('id', sa.Integer, primary_key=True),
    sa.Column('season_stats_id', sa.Integer),
    sa.Column('pts_diff', sa.Integer)
)


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    for season_stats in connection.execute(season_stats_tbl.select()):
        pms = connection.execute(player_match_stats_tbl.select().where(
            player_match_stats_tbl.c.season_stats_id == season_stats.id).order_by(player_match_stats_tbl.c.id))
        pms = list(pms)
        longest = 0
        current = 0
        for e in pms:
            if e[2] < 0:
                current += 1
                if current > longest:
                    longest = current
            else:
                current = 0
        index = len(pms) - 2
        if index > -2:
            sign_more = bool(pms[-1].pts_diff > 0)
            streak = sign_more*2 - 1
            while index >= 0:
                if sign_more:
                    if pms[index].pts_diff > 0:
                        streak += 1
                    else: break
                elif pms[index].pts_diff < 0:
                    streak -= 1
                else: break
                index = index - 1
            connection.execute(
                season_stats_tbl.update().where(season_stats_tbl.c.id == season_stats.id)\
                    .values(longest_losestreak=longest, streak=streak)
            )

def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    pass
    ### end Alembic commands ###
