"""initial

Revision ID: c8b48a1206
Revises:
Create Date: 2021-03-07 11:47:58.287350

"""

# revision identifiers, used by Alembic.
revision = "c8b48a1206"
down_revision = None
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "player",
        sa.Column("steam_id", sa.BigInteger(), nullable=False),
        sa.Column("nickname", sa.String(length=80), nullable=True),
        sa.Column("avatar", sa.String(length=255), nullable=True),
        sa.Column("avatar_medium", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("steam_id"),
    )
    op.create_table(
        "season",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("started", sa.DateTime(), nullable=True),
        sa.Column("ended", sa.DateTime(), nullable=True),
        sa.Column("place_1", sa.BigInteger(), nullable=True),
        sa.Column("place_2", sa.BigInteger(), nullable=True),
        sa.Column("place_3", sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(
            ["place_1"], ["player.steam_id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["place_2"], ["player.steam_id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["place_3"], ["player.steam_id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("number"),
    )
    op.create_table(
        "match",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("season_id", sa.Integer(), nullable=False),
        sa.Column("cm_captains", postgresql.ARRAY(sa.Integer()), nullable=True),
        sa.Column("radiant_win", sa.Boolean(), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("game_mode", sa.Integer(), nullable=True),
        sa.Column("start_time", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["season_id"], ["season.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "season_stats",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("season_id", sa.Integer(), nullable=False),
        sa.Column("steam_id", sa.BigInteger(), nullable=False),
        sa.Column("wins", sa.Integer(), nullable=False),
        sa.Column("losses", sa.Integer(), nullable=False),
        sa.Column("pts", sa.Integer(), nullable=False),
        sa.Column("longest_winstreak", sa.Integer(), nullable=False),
        sa.Column("longest_losestreak", sa.Integer(), nullable=False),
        sa.Column("streak", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["season_id"], ["season.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["steam_id"], ["player.steam_id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cm_picks_bans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_pick", sa.Boolean(), nullable=False),
        sa.Column("is_radiant", sa.Boolean(), nullable=False),
        sa.Column("hero", sa.String(length=255), nullable=False),
        sa.Column("match_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["match_id"], ["match.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("hero", "match_id", name="cm_picks_bans_hero_match"),
    )
    op.create_table(
        "player_match_stats",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("season_stats_id", sa.Integer(), nullable=False),
        sa.Column("match_id", sa.BigInteger(), nullable=False),
        sa.Column("old_pts", sa.Integer(), nullable=False),
        sa.Column("pts_diff", sa.Integer(), nullable=False),
        sa.Column("kills", sa.Integer(), nullable=False),
        sa.Column("assists", sa.Integer(), nullable=False),
        sa.Column("deaths", sa.Integer(), nullable=False),
        sa.Column("hero_damage", sa.Integer(), nullable=False),
        sa.Column("last_hits", sa.Integer(), nullable=False),
        sa.Column("player_slot", sa.Integer(), nullable=False),
        sa.Column("denies", sa.Integer(), nullable=False),
        sa.Column("tower_damage", sa.Integer(), nullable=True),
        sa.Column("hero", sa.String(length=255), nullable=False),
        sa.Column("hero_healing", sa.Integer(), nullable=True),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("xp_per_min", sa.Integer(), nullable=True),
        sa.Column("gold_per_min", sa.Integer(), nullable=True),
        sa.Column("damage_taken", sa.Integer(), nullable=True),
        sa.Column("movement", postgresql.JSONB(), nullable=True),
        sa.Column("position", sa.String(length=255), nullable=True,),
        sa.Column("role", sa.String(length=255), nullable=True),
        sa.Column("observer_wards_placed", sa.Integer(), nullable=True),
        sa.Column("sentry_wards_placed", sa.Integer(), nullable=True),
        sa.Column("early_last_hits", sa.Integer(), nullable=True),
        sa.Column("early_denies", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["match_id"], ["match.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["season_stats_id"],
            ["season_stats.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "player_match_item",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("player_match_stats_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.ForeignKeyConstraint(
            ["player_match_stats_id"],
            ["player_match_stats.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "player_match_rating",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("rated_by_steam_id", sa.BigInteger(), nullable=False),
        sa.Column("rating", sa.SmallInteger(), nullable=True),
        sa.Column("player_match_stats_id", sa.Integer(), nullable=False),
        sa.CheckConstraint("player_match_rating.rating <= 5"),
        sa.CheckConstraint("player_match_rating.rating >= 1"),
        sa.ForeignKeyConstraint(
            ["player_match_stats_id"],
            ["player_match_stats.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["rated_by_steam_id"],
            ["player.steam_id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "rated_by_steam_id", "player_match_stats_id", name="rated_once"
        ),
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("player_match_rating")
    op.drop_table("player_match_item")
    op.drop_table("player_match_stats")
    op.drop_table("cm_picks_bans")
    op.drop_table("season_stats")
    op.drop_table("match")
    op.drop_table("season")
    op.drop_table("player")
    ### end Alembic commands ###
